############# WORK IN PROGRESS ###############

import time
import random

import os
from sys import argv
from sys import stdout
import re
import optparse

import subprocess
from subprocess import call
from signal import SIGINT, SIGTERM

DN = open(os.devnull, 'w')

print("\n####   WPS_CRACKER   ####")
print("Made by: Airil/Ainhoa/Ari (we are the same person)\n\n\n")

time.sleep(1)
call("ifconfig")

iface = input("[-] Net Interface name: ")
ifconfig_result = subprocess.check_output(["ifconfig", iface])
macSearch = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", str(ifconfig_result))
if macSearch:
    realMac = macSearch.group(0)
    print("[+] Real MAC: ", realMac)
        
def change_mac(iface, option):
    if option == "new":
        print("\n[+] Setting a new MAC...")
        newMAC = ""
        chars = ["0","1", "2","3","4", "5","6", "7","8", "9","A","B","C","D","E","F"]
        for i in range(5):
            for a in range(2):
                newMAC += chars[random.randint(0,15)]
            newMAC += ":"
        for a in range(2):
            newMAC += chars[random.randint(0,15)]
        print("[+] new temporal MAC: ", newMAC)
        
        call(["ifconfig", iface, "down"], stdout=DN, stderr=DN)
        call(["ifconfig", iface, "hw", "ether", newMAC], stdout=DN, stderr=DN)
        call(["ifconfig", iface, "up"], stdout=DN, stderr=DN)
        
    else:
        print("[+] Setting old MAC...")
        call(["ifconfig", iface, "down"], stdout=DN, stderr=DN)
        call(["ifconfig", iface, "hw", "ether", realMac], stdout=DN, stderr=DN)
        call(["ifconfig", iface, "up"], stdout=DN, stderr=DN)

def enable_monitor_mode(iface):
    print("[+] Starting monitor mode...")
    change_mac(iface, "new")
    call(['airmon-ng', 'start', iface], stdout=DN, stderr=DN)
    call(['iw', 'reg', 'set', 'BO'], stdout=DN, stderr=DN)
        
def disable_monitor_mode(iface):
    print("[+] Disabling monitor mode...")
    call(['airmon-ng', 'stop', iface], stdout=DN, stderr=DN)
    change_mac(iface, "old")

if os.getuid() == 0 and os.uname()[0].startswith("Linux"):
    enable_monitor_mode(iface)
    print("uwu")
    
    time.sleep(10)
    
    disable_monitor_mode(iface)
    print("owo")
    
else:
    if not os.uname()[0].startswith("Linux") and not 'Darwin' in os.uname()[0]:
        print("[x] This tool only work in linux")
    else:
        print("\n[x] Login as Root and try again\n")
