# Made by: Airil / Ainhoa

import time
import random

import os
import re
import requests
import sys

import subprocess
from subprocess import call

from termcolor import colored
from pwn import *

from reconocimiento import scan_local_network, subdomains, directories
from other_functions import exit, show_metadata

print(colored("\n                                                           __====-_        _-====__", 'red', attrs=['blink']),
      colored("\n                                                       _--^^^#####//      \\#####^^^--_", 'red', attrs=['blink']),
      colored("\n                                                    _-^##########// (    ) \\##########^-_", 'red', attrs=['blink']),
      colored("\n                                                   -############//  |\^^/|  \\############-", 'red', attrs=['blink']),
      colored("\n                                                 _/############//   (@::@)   \\############\_", 'red', attrs=['blink']),
      colored("\n                                                ./#############((   \.\/./   ))#############\.", 'red', attrs=['blink']),
      colored("\n                                                -###############\\    (oo)    //###############-", 'red', attrs=['blink']),
      colored("\n                                                -#################\\  /  \  //#################-", 'red', attrs=['blink']),
      colored("\n                                              _#/|##########/\######(    )######/\##########|\#_", 'red', attrs=['blink']),
      colored("\n\n#########   #     #   #     #   #      #   #####    ######   ######         #####    ######     ####     ####     ####    #       #", 'red', attrs=['blink']),
      colored("\n    #       #     #   #     #   # #    #   #    #   #        #     #        #    #   #     #   #    #   #        #    #   # #     #", 'red', attrs=['blink']),
      colored("\n    #       #######   #     #   #   #  #   #    #   ###      ######         #    #   ######    ######   #   ###  #    #   #   #   #", 'red', attrs=['blink']),
      colored("\n    #       #     #   #     #   #    # #   #    #   #        #     #        #    #   #     #   #    #   #    #   #    #   #     # #", 'red', attrs=['blink']),
      colored("\n    #       #     #    #####    #      #   #####    ######   #     #        #####    #     #   #    #    ####     ####    #       #", 'red', attrs=['blink']))

print(colored("\n\n####   ThunderDragon   ####", 'red'))
print(colored("Made by: Airil\n", 'cyan'))
print(colored("I am not responsible for the misuse that may be given to this tool!\n\n", 'red', attrs=['reverse', 'blink', 'dark', 'dark']))

try:
    if os.getuid() == 0:
        ###### CHECKS
        print("\n" + colored("[+]", 'green'), "Checking requeriments... ")
        if str(subprocess.check_output(["which", "searchsploit"])) != "":
            print(colored("[+]", 'green'), "Searchsploit installed")
            print(colored("[-] If you haven't updated Searchsploit recently, please run 'searchsploit -u' to update it.", 'yellow'))
        else:
            print(colored("[-]", 'yellow'), "Instaling searchsploit...")
            call(["sudo", "apt", "update", "&&", "sudo", "apt", "-y", "install", "exploitdb", "-Y"])
            print(colored("[+]", 'green'), "Searchsploit installed")
        
        ###### EJECUCION
        while True:
            option = input(str(colored("\nThunderDragon", 'blue') + colored(" option > ", 'red'))).lower().strip()
            
            if option == "subdomains":
                domain = input(str(colored("\nThunderDragon", 'blue') + colored(" DOMAIN > ", 'red'))).strip()
                sslcert = input(str(colored("\nThunderDragon", 'blue') + colored(" Is https? [y/n] > ", 'red'))).strip()
                brute = input(str(colored("\nThunderDragon", 'blue') + colored(" Do you want to use Brute Force to try to find more? [y/n] > ", 'red'))).lower().strip()
                subdomainslist = subdomains(domain, brute, sslcert)
                
                if subdomainslist == []:
                    print(colored("\n[!] Subdomains not found!", 'red'))
                else:
                    print(colored("\n[+] Subdomains founded!\n", 'green'))
                    
                    print(colored("SUBDOMAINS\n", 'green', attrs=['dark', 'underline']))
                    for i in subdomainslist:
                        print(colored(i, 'blue'))
            
            elif option == "scan_localnet":
                active_hosts = scan_local_network(input(str(colored("\nThunderDragon", 'blue') + colored(" ip and cidr (example: 255.255.127.0/24) > ", 'red'))).strip())
                
                print(colored("\nActive Hosts\n", 'green', attrs=['dark', 'underline']))
                for host in active_hosts:
                    print(colored(host, 'blue'))
            
            elif option == "show_metadata":
                show_metadata(input(str(colored("\nThunderDragon", 'blue') + colored(" File Path > ", 'red'))).strip())
            
            elif option == "help":
                print(colored("\n\nHELP:", 'green', attrs=['underline', 'dark'])+
                      "\n路 subdomains" +
                      "\n路 scan_localnet"+
                      "\n路 show_metadata"+
                      "\n路 exit")
            
            elif option == "exit":
                exit()
                              
    else:
        print("\n" + colored("[!] Login as Root ", 'red') + colored("and try again\n", 'yellow'))

except:
    print(colored("[!]", 'red') + colored(" This tool only work in Linux", 'red'))
