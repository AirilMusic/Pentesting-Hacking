# Made by: Airil / Ainhoa
import bleak
import asyncio
from termcolor import colored

def discover():
    async def main():
        devices = await bleak.BleakScanner.discover()
        return devices
    
    return asyncio.run(main())

def bluescan():
    print("\n")

    async def list_services(macs, names):
        for i in range(len(macs)):
            try:
                async with bleak.BleakClient(macs[i]) as client:
                    connected = await client.connect()
                    if connected:
                        print(str(colored(macs[i], 'cyan') + colored(" Name: ", 'green') + colored(names[i], 'cyan')))
                        services = await client.get_services()
                        print(colored("Services:", 'green'))
                        for service in services:
                            print(colored(service, 'cyan'))

                    else:
                        print(str(colored(macs[i], 'cyan') + colored(" Name: ", 'green') + colored(names[i], 'cyan') + colored(" Service:", 'green') + colored(" ERROR TO CONNECT ", 'red')))
            except:
                print(str(colored(macs[i], 'cyan') + colored(" Name: ", 'green') + colored(names[i], 'cyan') + colored(" Service:", 'green') + colored(" ERROR TO CONNECT ", 'red')))

    devices = discover()

    macs = []
    names = []

    for d in devices:
        macs.append(str(d.address))
        names.append(str(d.name if d.name else "Unknown"))

    asyncio.run(list_services(macs, names))
